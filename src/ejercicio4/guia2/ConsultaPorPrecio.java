/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ejercicio4.guia2;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author valkiria
 */
public class ConsultaPorPrecio extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo=new DefaultTableModel();
   
    /**
     * Creates new form ConsultaPorPrecio
     */
    public ConsultaPorPrecio() {
        initComponents();
        agregarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        precioMinimo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        precioMaximo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("CONSULTA POR PRECIOS");

        jLabel2.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        jLabel2.setText("ENTRE: $");

        precioMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioMinimoActionPerformed(evt);
            }
        });
        precioMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioMinimoKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        jLabel3.setText("Y: $");

        precioMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioMaximoActionPerformed(evt);
            }
        });
        precioMaximo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioMaximoKeyReleased(evt);
            }
        });

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precioMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precioMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(precioMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(precioMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void precioMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioMaximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioMaximoActionPerformed

    private void precioMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioMinimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioMinimoActionPerformed

    private void precioMaximoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioMaximoKeyReleased
        borrarFilas();
        try{
            double maximo;
            double minimo;
            if(precioMinimo.getText().isEmpty()){
                minimo=0;
            }else{
                minimo=Double.parseDouble(precioMinimo.getText());
            }
            if(precioMaximo.getText().isEmpty()){
                maximo=buscarMaximo();
            }else{maximo=Double.parseDouble(precioMaximo.getText());}
            
            for (Producto prod : MenuDeTodoSA.inventario) {
                if(minimo<=prod.getPrecio() && maximo>=prod.getPrecio()){
                    modelo.addRow(new Object[]{prod.getCodigo(),prod.getDescripcion(),prod.getPrecio(),prod.getStock()});
                    
                }
            }
            jTProductos.setModel(modelo);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "error");
        }
    }//GEN-LAST:event_precioMaximoKeyReleased

    private void precioMinimoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioMinimoKeyReleased
        borrarFilas();
        try{
            double maximo;
            double minimo;
            if(precioMinimo.getText().isEmpty()){
                minimo=0;
            }else{
                minimo=Double.parseDouble(precioMinimo.getText());
            }
            if(precioMaximo.getText().isEmpty()){
                maximo=buscarMaximo();
            }else{
                maximo=Double.parseDouble(precioMaximo.getText());
            }
            
            for (Producto prod : MenuDeTodoSA.inventario) {
                if(minimo<=prod.getPrecio() && maximo>=prod.getPrecio()){
                    modelo.addRow(new Object[]{prod.getCodigo(),prod.getDescripcion(),prod.getPrecio(),prod.getStock()});
                }
            }
            jTProductos.setModel(modelo);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "error");
        }
    }//GEN-LAST:event_precioMinimoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTProductos;
    private javax.swing.JTextField precioMaximo;
    private javax.swing.JTextField precioMinimo;
    // End of variables declaration//GEN-END:variables
       private void agregarCabecera(){
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripion");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jTProductos.setModel(modelo);
        
    }
    private void borrarFilas(){
        int f=jTProductos.getRowCount()-1;
        for(;f>=0;f--){
            modelo.removeRow(f);
        }
    }
    private double buscarMaximo(){
        double valor=0;
        for (Producto p : MenuDeTodoSA.inventario) {
            if(p.getPrecio()>valor){
                valor=p.getPrecio();
            }
        }
        return valor;
    }
}
